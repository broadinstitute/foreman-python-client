# coding: utf-8

"""
    Foreman (params in:formData)

     <p>Foreman API v2 is currently the default API version.</p> 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import io
import warnings

from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Dict, List, Optional, Tuple, Union, Any

try:
    from typing import Annotated
except ImportError:
    from typing_extensions import Annotated

from pydantic import Field
from typing_extensions import Annotated
from pydantic import StrictBool, StrictFloat, StrictInt, StrictStr

from typing import List, Optional, Union


from foreman.api_client import ApiClient
from foreman.api_response import ApiResponse
from foreman.rest import RESTResponseType


class RegistrationApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client

    @validate_call
    def get_register(
        self,
        organization_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Organization to register the host in"),
        ] = None,
        location_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Location to register the host in"),
        ] = None,
        hostgroup_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Host group to register the host in"),
        ] = None,
        operatingsystem_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Operating System to register the host in"),
        ] = None,
        setup_insights: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems"
            ),
        ] = None,
        setup_remote_execution: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host"
            ),
        ] = None,
        packages: Annotated[
            Optional[StrictStr],
            Field(
                description="Packages to install on the host when registered. Can be set by `host_packages` parameter, example: `pkg1 pkg2`"
            ),
        ] = None,
        update_packages: Annotated[
            Optional[StrictBool], Field(description="Update all packages on the host")
        ] = None,
        repo: Annotated[
            Optional[StrictStr],
            Field(
                description="Repository URL / details, for example for Debian OS family: 'deb http://deb.example.com/ buster 1.0', for Red Hat OS family: 'http://yum.theforeman.org/client/latest/el8/x86_64/'"
            ),
        ] = None,
        repo_gpg_key_url: Annotated[
            Optional[StrictStr],
            Field(description="URL of the GPG key for the repository"),
        ] = None,
        remote_execution_interface: Annotated[
            Optional[StrictStr],
            Field(description="Identifier of the Host interface for Remote execution"),
        ] = None,
        setup_remote_execution_pull: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host"
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Render Global registration template


        :param organization_id: ID of the Organization to register the host in
        :type organization_id: float
        :param location_id: ID of the Location to register the host in
        :type location_id: float
        :param hostgroup_id: ID of the Host group to register the host in
        :type hostgroup_id: float
        :param operatingsystem_id: ID of the Operating System to register the host in
        :type operatingsystem_id: float
        :param setup_insights: Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems
        :type setup_insights: bool
        :param setup_remote_execution: Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host
        :type setup_remote_execution: bool
        :param packages: Packages to install on the host when registered. Can be set by `host_packages` parameter, example: `pkg1 pkg2`
        :type packages: str
        :param update_packages: Update all packages on the host
        :type update_packages: bool
        :param repo: Repository URL / details, for example for Debian OS family: 'deb http://deb.example.com/ buster 1.0', for Red Hat OS family: 'http://yum.theforeman.org/client/latest/el8/x86_64/'
        :type repo: str
        :param repo_gpg_key_url: URL of the GPG key for the repository
        :type repo_gpg_key_url: str
        :param remote_execution_interface: Identifier of the Host interface for Remote execution
        :type remote_execution_interface: str
        :param setup_remote_execution_pull: Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host
        :type setup_remote_execution_pull: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._get_register_serialize(
            organization_id=organization_id,
            location_id=location_id,
            hostgroup_id=hostgroup_id,
            operatingsystem_id=operatingsystem_id,
            setup_insights=setup_insights,
            setup_remote_execution=setup_remote_execution,
            packages=packages,
            update_packages=update_packages,
            repo=repo,
            repo_gpg_key_url=repo_gpg_key_url,
            remote_execution_interface=remote_execution_interface,
            setup_remote_execution_pull=setup_remote_execution_pull,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def get_register_with_http_info(
        self,
        organization_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Organization to register the host in"),
        ] = None,
        location_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Location to register the host in"),
        ] = None,
        hostgroup_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Host group to register the host in"),
        ] = None,
        operatingsystem_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Operating System to register the host in"),
        ] = None,
        setup_insights: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems"
            ),
        ] = None,
        setup_remote_execution: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host"
            ),
        ] = None,
        packages: Annotated[
            Optional[StrictStr],
            Field(
                description="Packages to install on the host when registered. Can be set by `host_packages` parameter, example: `pkg1 pkg2`"
            ),
        ] = None,
        update_packages: Annotated[
            Optional[StrictBool], Field(description="Update all packages on the host")
        ] = None,
        repo: Annotated[
            Optional[StrictStr],
            Field(
                description="Repository URL / details, for example for Debian OS family: 'deb http://deb.example.com/ buster 1.0', for Red Hat OS family: 'http://yum.theforeman.org/client/latest/el8/x86_64/'"
            ),
        ] = None,
        repo_gpg_key_url: Annotated[
            Optional[StrictStr],
            Field(description="URL of the GPG key for the repository"),
        ] = None,
        remote_execution_interface: Annotated[
            Optional[StrictStr],
            Field(description="Identifier of the Host interface for Remote execution"),
        ] = None,
        setup_remote_execution_pull: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host"
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Render Global registration template


        :param organization_id: ID of the Organization to register the host in
        :type organization_id: float
        :param location_id: ID of the Location to register the host in
        :type location_id: float
        :param hostgroup_id: ID of the Host group to register the host in
        :type hostgroup_id: float
        :param operatingsystem_id: ID of the Operating System to register the host in
        :type operatingsystem_id: float
        :param setup_insights: Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems
        :type setup_insights: bool
        :param setup_remote_execution: Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host
        :type setup_remote_execution: bool
        :param packages: Packages to install on the host when registered. Can be set by `host_packages` parameter, example: `pkg1 pkg2`
        :type packages: str
        :param update_packages: Update all packages on the host
        :type update_packages: bool
        :param repo: Repository URL / details, for example for Debian OS family: 'deb http://deb.example.com/ buster 1.0', for Red Hat OS family: 'http://yum.theforeman.org/client/latest/el8/x86_64/'
        :type repo: str
        :param repo_gpg_key_url: URL of the GPG key for the repository
        :type repo_gpg_key_url: str
        :param remote_execution_interface: Identifier of the Host interface for Remote execution
        :type remote_execution_interface: str
        :param setup_remote_execution_pull: Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host
        :type setup_remote_execution_pull: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._get_register_serialize(
            organization_id=organization_id,
            location_id=location_id,
            hostgroup_id=hostgroup_id,
            operatingsystem_id=operatingsystem_id,
            setup_insights=setup_insights,
            setup_remote_execution=setup_remote_execution,
            packages=packages,
            update_packages=update_packages,
            repo=repo,
            repo_gpg_key_url=repo_gpg_key_url,
            remote_execution_interface=remote_execution_interface,
            setup_remote_execution_pull=setup_remote_execution_pull,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def get_register_without_preload_content(
        self,
        organization_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Organization to register the host in"),
        ] = None,
        location_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Location to register the host in"),
        ] = None,
        hostgroup_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Host group to register the host in"),
        ] = None,
        operatingsystem_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="ID of the Operating System to register the host in"),
        ] = None,
        setup_insights: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems"
            ),
        ] = None,
        setup_remote_execution: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host"
            ),
        ] = None,
        packages: Annotated[
            Optional[StrictStr],
            Field(
                description="Packages to install on the host when registered. Can be set by `host_packages` parameter, example: `pkg1 pkg2`"
            ),
        ] = None,
        update_packages: Annotated[
            Optional[StrictBool], Field(description="Update all packages on the host")
        ] = None,
        repo: Annotated[
            Optional[StrictStr],
            Field(
                description="Repository URL / details, for example for Debian OS family: 'deb http://deb.example.com/ buster 1.0', for Red Hat OS family: 'http://yum.theforeman.org/client/latest/el8/x86_64/'"
            ),
        ] = None,
        repo_gpg_key_url: Annotated[
            Optional[StrictStr],
            Field(description="URL of the GPG key for the repository"),
        ] = None,
        remote_execution_interface: Annotated[
            Optional[StrictStr],
            Field(description="Identifier of the Host interface for Remote execution"),
        ] = None,
        setup_remote_execution_pull: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host"
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Render Global registration template


        :param organization_id: ID of the Organization to register the host in
        :type organization_id: float
        :param location_id: ID of the Location to register the host in
        :type location_id: float
        :param hostgroup_id: ID of the Host group to register the host in
        :type hostgroup_id: float
        :param operatingsystem_id: ID of the Operating System to register the host in
        :type operatingsystem_id: float
        :param setup_insights: Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems
        :type setup_insights: bool
        :param setup_remote_execution: Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host
        :type setup_remote_execution: bool
        :param packages: Packages to install on the host when registered. Can be set by `host_packages` parameter, example: `pkg1 pkg2`
        :type packages: str
        :param update_packages: Update all packages on the host
        :type update_packages: bool
        :param repo: Repository URL / details, for example for Debian OS family: 'deb http://deb.example.com/ buster 1.0', for Red Hat OS family: 'http://yum.theforeman.org/client/latest/el8/x86_64/'
        :type repo: str
        :param repo_gpg_key_url: URL of the GPG key for the repository
        :type repo_gpg_key_url: str
        :param remote_execution_interface: Identifier of the Host interface for Remote execution
        :type remote_execution_interface: str
        :param setup_remote_execution_pull: Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host
        :type setup_remote_execution_pull: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._get_register_serialize(
            organization_id=organization_id,
            location_id=location_id,
            hostgroup_id=hostgroup_id,
            operatingsystem_id=operatingsystem_id,
            setup_insights=setup_insights,
            setup_remote_execution=setup_remote_execution,
            packages=packages,
            update_packages=update_packages,
            repo=repo,
            repo_gpg_key_url=repo_gpg_key_url,
            remote_execution_interface=remote_execution_interface,
            setup_remote_execution_pull=setup_remote_execution_pull,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _get_register_serialize(
        self,
        organization_id,
        location_id,
        hostgroup_id,
        operatingsystem_id,
        setup_insights,
        setup_remote_execution,
        packages,
        update_packages,
        repo,
        repo_gpg_key_url,
        remote_execution_interface,
        setup_remote_execution_pull,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> Tuple:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if organization_id is not None:
            _query_params.append(("organization_id", organization_id))

        if location_id is not None:
            _query_params.append(("location_id", location_id))

        if hostgroup_id is not None:
            _query_params.append(("hostgroup_id", hostgroup_id))

        if operatingsystem_id is not None:
            _query_params.append(("operatingsystem_id", operatingsystem_id))

        if setup_insights is not None:
            _query_params.append(("setup_insights", setup_insights))

        if setup_remote_execution is not None:
            _query_params.append(("setup_remote_execution", setup_remote_execution))

        if packages is not None:
            _query_params.append(("packages", packages))

        if update_packages is not None:
            _query_params.append(("update_packages", update_packages))

        if repo is not None:
            _query_params.append(("repo", repo))

        if repo_gpg_key_url is not None:
            _query_params.append(("repo_gpg_key_url", repo_gpg_key_url))

        if remote_execution_interface is not None:
            _query_params.append(
                ("remote_execution_interface", remote_execution_interface)
            )

        if setup_remote_execution_pull is not None:
            _query_params.append(
                ("setup_remote_execution_pull", setup_remote_execution_pull)
            )

        # process the header parameters
        # process the form parameters
        # process the body parameter

        # authentication setting
        _auth_settings: List[str] = []

        return self.api_client.param_serialize(
            method="GET",
            resource_path="/register",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def post_register(
        self,
        location_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="Set the current location context for the request"),
        ] = None,
        organization_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="Set the current organization context for the request"),
        ] = None,
        host_name: Optional[StrictStr] = None,
        host_location_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_organization_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_ip: Annotated[
            Optional[StrictStr],
            Field(
                description="IPv4 address, not required if using a subnet with DHCP proxy"
            ),
        ] = None,
        host_ip6: Annotated[
            Optional[StrictStr],
            Field(
                description="IPv6 address, not required if using a subnet with DHCP proxy"
            ),
        ] = None,
        host_mac: Annotated[
            Optional[StrictStr],
            Field(
                description="required for managed host that is bare metal, not required if it's a virtual machine"
            ),
        ] = None,
        host_domain_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="required if host is managed and value is not inherited from host group"
            ),
        ] = None,
        host_operatingsystem_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="required if host is managed and value is not inherited from host group"
            ),
        ] = None,
        host_subnet_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="required if host is managed and value is not inherited from host group"
            ),
        ] = None,
        host_model_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_hostgroup_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_host_parameters_attributes: Annotated[
            Optional[List[StrictStr]],
            Field(description="Host's parameters (array or indexed hash)"),
        ] = None,
        host_build: Optional[StrictBool] = None,
        host_enabled: Annotated[
            Optional[StrictBool],
            Field(description="Include this host within Foreman reporting"),
        ] = None,
        host_managed: Annotated[
            Optional[StrictBool],
            Field(
                description="True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not"
            ),
        ] = None,
        host_comment: Annotated[
            Optional[StrictStr],
            Field(description="Additional information about this host"),
        ] = None,
        host_interfaces_attributes: Annotated[
            Optional[List[StrictStr]], Field(description="Host's network interfaces")
        ] = None,
        host_content_facet_attributes_content_view_id: Optional[
            Union[StrictFloat, StrictInt]
        ] = None,
        host_content_facet_attributes_lifecycle_environment_id: Optional[
            Union[StrictFloat, StrictInt]
        ] = None,
        host_content_facet_attributes_content_source_id: Optional[
            Union[StrictFloat, StrictInt]
        ] = None,
        host_content_facet_attributes_kickstart_repository_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="Repository Id associated with the kickstart repo used for provisioning"
            ),
        ] = None,
        host_subscription_facet_attributes_release_version: Annotated[
            Optional[StrictStr],
            Field(
                description="Release version for this Host to use (7Server, 7.1, etc)"
            ),
        ] = None,
        host_subscription_facet_attributes_autoheal: Annotated[
            Optional[StrictBool],
            Field(
                description="Sets whether the Host will autoheal subscriptions upon checkin"
            ),
        ] = None,
        host_subscription_facet_attributes_purpose_usage: Annotated[
            Optional[StrictStr], Field(description="Sets the system purpose usage")
        ] = None,
        host_subscription_facet_attributes_purpose_role: Annotated[
            Optional[StrictStr], Field(description="Sets the system purpose usage")
        ] = None,
        host_subscription_facet_attributes_purpose_addons: Annotated[
            Optional[List[StrictStr]], Field(description="Sets the system add-ons")
        ] = None,
        host_subscription_facet_attributes_service_level: Annotated[
            Optional[StrictStr],
            Field(description="Service level to be used for autoheal"),
        ] = None,
        host_subscription_facet_attributes_hypervisor_guest_uuids: Annotated[
            Optional[List[StrictStr]],
            Field(description="List of hypervisor guest uuids"),
        ] = None,
        host_subscription_facet_attributes_installed_products_attributes: Annotated[
            Optional[List[StrictStr]],
            Field(description="List of products installed on the host"),
        ] = None,
        setup_insights: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems"
            ),
        ] = None,
        setup_remote_execution: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host"
            ),
        ] = None,
        remote_execution_interface: Annotated[
            Optional[StrictStr],
            Field(description="Identifier of the Host interface for Remote execution"),
        ] = None,
        setup_remote_execution_pull: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host"
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Find or create a host and render the 'Host initial configuration' template


        :param location_id: Set the current location context for the request
        :type location_id: float
        :param organization_id: Set the current organization context for the request
        :type organization_id: float
        :param host_name:
        :type host_name: str
        :param host_location_id:
        :type host_location_id: float
        :param host_organization_id:
        :type host_organization_id: float
        :param host_ip: IPv4 address, not required if using a subnet with DHCP proxy
        :type host_ip: str
        :param host_ip6: IPv6 address, not required if using a subnet with DHCP proxy
        :type host_ip6: str
        :param host_mac: required for managed host that is bare metal, not required if it's a virtual machine
        :type host_mac: str
        :param host_domain_id: required if host is managed and value is not inherited from host group
        :type host_domain_id: float
        :param host_operatingsystem_id: required if host is managed and value is not inherited from host group
        :type host_operatingsystem_id: float
        :param host_subnet_id: required if host is managed and value is not inherited from host group
        :type host_subnet_id: float
        :param host_model_id:
        :type host_model_id: float
        :param host_hostgroup_id:
        :type host_hostgroup_id: float
        :param host_host_parameters_attributes: Host's parameters (array or indexed hash)
        :type host_host_parameters_attributes: List[str]
        :param host_build:
        :type host_build: bool
        :param host_enabled: Include this host within Foreman reporting
        :type host_enabled: bool
        :param host_managed: True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not
        :type host_managed: bool
        :param host_comment: Additional information about this host
        :type host_comment: str
        :param host_interfaces_attributes: Host's network interfaces
        :type host_interfaces_attributes: List[str]
        :param host_content_facet_attributes_content_view_id:
        :type host_content_facet_attributes_content_view_id: float
        :param host_content_facet_attributes_lifecycle_environment_id:
        :type host_content_facet_attributes_lifecycle_environment_id: float
        :param host_content_facet_attributes_content_source_id:
        :type host_content_facet_attributes_content_source_id: float
        :param host_content_facet_attributes_kickstart_repository_id: Repository Id associated with the kickstart repo used for provisioning
        :type host_content_facet_attributes_kickstart_repository_id: float
        :param host_subscription_facet_attributes_release_version: Release version for this Host to use (7Server, 7.1, etc)
        :type host_subscription_facet_attributes_release_version: str
        :param host_subscription_facet_attributes_autoheal: Sets whether the Host will autoheal subscriptions upon checkin
        :type host_subscription_facet_attributes_autoheal: bool
        :param host_subscription_facet_attributes_purpose_usage: Sets the system purpose usage
        :type host_subscription_facet_attributes_purpose_usage: str
        :param host_subscription_facet_attributes_purpose_role: Sets the system purpose usage
        :type host_subscription_facet_attributes_purpose_role: str
        :param host_subscription_facet_attributes_purpose_addons: Sets the system add-ons
        :type host_subscription_facet_attributes_purpose_addons: List[str]
        :param host_subscription_facet_attributes_service_level: Service level to be used for autoheal
        :type host_subscription_facet_attributes_service_level: str
        :param host_subscription_facet_attributes_hypervisor_guest_uuids: List of hypervisor guest uuids
        :type host_subscription_facet_attributes_hypervisor_guest_uuids: List[str]
        :param host_subscription_facet_attributes_installed_products_attributes: List of products installed on the host
        :type host_subscription_facet_attributes_installed_products_attributes: List[str]
        :param setup_insights: Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems
        :type setup_insights: bool
        :param setup_remote_execution: Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host
        :type setup_remote_execution: bool
        :param remote_execution_interface: Identifier of the Host interface for Remote execution
        :type remote_execution_interface: str
        :param setup_remote_execution_pull: Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host
        :type setup_remote_execution_pull: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._post_register_serialize(
            location_id=location_id,
            organization_id=organization_id,
            host_name=host_name,
            host_location_id=host_location_id,
            host_organization_id=host_organization_id,
            host_ip=host_ip,
            host_ip6=host_ip6,
            host_mac=host_mac,
            host_domain_id=host_domain_id,
            host_operatingsystem_id=host_operatingsystem_id,
            host_subnet_id=host_subnet_id,
            host_model_id=host_model_id,
            host_hostgroup_id=host_hostgroup_id,
            host_host_parameters_attributes=host_host_parameters_attributes,
            host_build=host_build,
            host_enabled=host_enabled,
            host_managed=host_managed,
            host_comment=host_comment,
            host_interfaces_attributes=host_interfaces_attributes,
            host_content_facet_attributes_content_view_id=host_content_facet_attributes_content_view_id,
            host_content_facet_attributes_lifecycle_environment_id=host_content_facet_attributes_lifecycle_environment_id,
            host_content_facet_attributes_content_source_id=host_content_facet_attributes_content_source_id,
            host_content_facet_attributes_kickstart_repository_id=host_content_facet_attributes_kickstart_repository_id,
            host_subscription_facet_attributes_release_version=host_subscription_facet_attributes_release_version,
            host_subscription_facet_attributes_autoheal=host_subscription_facet_attributes_autoheal,
            host_subscription_facet_attributes_purpose_usage=host_subscription_facet_attributes_purpose_usage,
            host_subscription_facet_attributes_purpose_role=host_subscription_facet_attributes_purpose_role,
            host_subscription_facet_attributes_purpose_addons=host_subscription_facet_attributes_purpose_addons,
            host_subscription_facet_attributes_service_level=host_subscription_facet_attributes_service_level,
            host_subscription_facet_attributes_hypervisor_guest_uuids=host_subscription_facet_attributes_hypervisor_guest_uuids,
            host_subscription_facet_attributes_installed_products_attributes=host_subscription_facet_attributes_installed_products_attributes,
            setup_insights=setup_insights,
            setup_remote_execution=setup_remote_execution,
            remote_execution_interface=remote_execution_interface,
            setup_remote_execution_pull=setup_remote_execution_pull,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def post_register_with_http_info(
        self,
        location_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="Set the current location context for the request"),
        ] = None,
        organization_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="Set the current organization context for the request"),
        ] = None,
        host_name: Optional[StrictStr] = None,
        host_location_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_organization_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_ip: Annotated[
            Optional[StrictStr],
            Field(
                description="IPv4 address, not required if using a subnet with DHCP proxy"
            ),
        ] = None,
        host_ip6: Annotated[
            Optional[StrictStr],
            Field(
                description="IPv6 address, not required if using a subnet with DHCP proxy"
            ),
        ] = None,
        host_mac: Annotated[
            Optional[StrictStr],
            Field(
                description="required for managed host that is bare metal, not required if it's a virtual machine"
            ),
        ] = None,
        host_domain_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="required if host is managed and value is not inherited from host group"
            ),
        ] = None,
        host_operatingsystem_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="required if host is managed and value is not inherited from host group"
            ),
        ] = None,
        host_subnet_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="required if host is managed and value is not inherited from host group"
            ),
        ] = None,
        host_model_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_hostgroup_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_host_parameters_attributes: Annotated[
            Optional[List[StrictStr]],
            Field(description="Host's parameters (array or indexed hash)"),
        ] = None,
        host_build: Optional[StrictBool] = None,
        host_enabled: Annotated[
            Optional[StrictBool],
            Field(description="Include this host within Foreman reporting"),
        ] = None,
        host_managed: Annotated[
            Optional[StrictBool],
            Field(
                description="True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not"
            ),
        ] = None,
        host_comment: Annotated[
            Optional[StrictStr],
            Field(description="Additional information about this host"),
        ] = None,
        host_interfaces_attributes: Annotated[
            Optional[List[StrictStr]], Field(description="Host's network interfaces")
        ] = None,
        host_content_facet_attributes_content_view_id: Optional[
            Union[StrictFloat, StrictInt]
        ] = None,
        host_content_facet_attributes_lifecycle_environment_id: Optional[
            Union[StrictFloat, StrictInt]
        ] = None,
        host_content_facet_attributes_content_source_id: Optional[
            Union[StrictFloat, StrictInt]
        ] = None,
        host_content_facet_attributes_kickstart_repository_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="Repository Id associated with the kickstart repo used for provisioning"
            ),
        ] = None,
        host_subscription_facet_attributes_release_version: Annotated[
            Optional[StrictStr],
            Field(
                description="Release version for this Host to use (7Server, 7.1, etc)"
            ),
        ] = None,
        host_subscription_facet_attributes_autoheal: Annotated[
            Optional[StrictBool],
            Field(
                description="Sets whether the Host will autoheal subscriptions upon checkin"
            ),
        ] = None,
        host_subscription_facet_attributes_purpose_usage: Annotated[
            Optional[StrictStr], Field(description="Sets the system purpose usage")
        ] = None,
        host_subscription_facet_attributes_purpose_role: Annotated[
            Optional[StrictStr], Field(description="Sets the system purpose usage")
        ] = None,
        host_subscription_facet_attributes_purpose_addons: Annotated[
            Optional[List[StrictStr]], Field(description="Sets the system add-ons")
        ] = None,
        host_subscription_facet_attributes_service_level: Annotated[
            Optional[StrictStr],
            Field(description="Service level to be used for autoheal"),
        ] = None,
        host_subscription_facet_attributes_hypervisor_guest_uuids: Annotated[
            Optional[List[StrictStr]],
            Field(description="List of hypervisor guest uuids"),
        ] = None,
        host_subscription_facet_attributes_installed_products_attributes: Annotated[
            Optional[List[StrictStr]],
            Field(description="List of products installed on the host"),
        ] = None,
        setup_insights: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems"
            ),
        ] = None,
        setup_remote_execution: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host"
            ),
        ] = None,
        remote_execution_interface: Annotated[
            Optional[StrictStr],
            Field(description="Identifier of the Host interface for Remote execution"),
        ] = None,
        setup_remote_execution_pull: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host"
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Find or create a host and render the 'Host initial configuration' template


        :param location_id: Set the current location context for the request
        :type location_id: float
        :param organization_id: Set the current organization context for the request
        :type organization_id: float
        :param host_name:
        :type host_name: str
        :param host_location_id:
        :type host_location_id: float
        :param host_organization_id:
        :type host_organization_id: float
        :param host_ip: IPv4 address, not required if using a subnet with DHCP proxy
        :type host_ip: str
        :param host_ip6: IPv6 address, not required if using a subnet with DHCP proxy
        :type host_ip6: str
        :param host_mac: required for managed host that is bare metal, not required if it's a virtual machine
        :type host_mac: str
        :param host_domain_id: required if host is managed and value is not inherited from host group
        :type host_domain_id: float
        :param host_operatingsystem_id: required if host is managed and value is not inherited from host group
        :type host_operatingsystem_id: float
        :param host_subnet_id: required if host is managed and value is not inherited from host group
        :type host_subnet_id: float
        :param host_model_id:
        :type host_model_id: float
        :param host_hostgroup_id:
        :type host_hostgroup_id: float
        :param host_host_parameters_attributes: Host's parameters (array or indexed hash)
        :type host_host_parameters_attributes: List[str]
        :param host_build:
        :type host_build: bool
        :param host_enabled: Include this host within Foreman reporting
        :type host_enabled: bool
        :param host_managed: True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not
        :type host_managed: bool
        :param host_comment: Additional information about this host
        :type host_comment: str
        :param host_interfaces_attributes: Host's network interfaces
        :type host_interfaces_attributes: List[str]
        :param host_content_facet_attributes_content_view_id:
        :type host_content_facet_attributes_content_view_id: float
        :param host_content_facet_attributes_lifecycle_environment_id:
        :type host_content_facet_attributes_lifecycle_environment_id: float
        :param host_content_facet_attributes_content_source_id:
        :type host_content_facet_attributes_content_source_id: float
        :param host_content_facet_attributes_kickstart_repository_id: Repository Id associated with the kickstart repo used for provisioning
        :type host_content_facet_attributes_kickstart_repository_id: float
        :param host_subscription_facet_attributes_release_version: Release version for this Host to use (7Server, 7.1, etc)
        :type host_subscription_facet_attributes_release_version: str
        :param host_subscription_facet_attributes_autoheal: Sets whether the Host will autoheal subscriptions upon checkin
        :type host_subscription_facet_attributes_autoheal: bool
        :param host_subscription_facet_attributes_purpose_usage: Sets the system purpose usage
        :type host_subscription_facet_attributes_purpose_usage: str
        :param host_subscription_facet_attributes_purpose_role: Sets the system purpose usage
        :type host_subscription_facet_attributes_purpose_role: str
        :param host_subscription_facet_attributes_purpose_addons: Sets the system add-ons
        :type host_subscription_facet_attributes_purpose_addons: List[str]
        :param host_subscription_facet_attributes_service_level: Service level to be used for autoheal
        :type host_subscription_facet_attributes_service_level: str
        :param host_subscription_facet_attributes_hypervisor_guest_uuids: List of hypervisor guest uuids
        :type host_subscription_facet_attributes_hypervisor_guest_uuids: List[str]
        :param host_subscription_facet_attributes_installed_products_attributes: List of products installed on the host
        :type host_subscription_facet_attributes_installed_products_attributes: List[str]
        :param setup_insights: Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems
        :type setup_insights: bool
        :param setup_remote_execution: Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host
        :type setup_remote_execution: bool
        :param remote_execution_interface: Identifier of the Host interface for Remote execution
        :type remote_execution_interface: str
        :param setup_remote_execution_pull: Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host
        :type setup_remote_execution_pull: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._post_register_serialize(
            location_id=location_id,
            organization_id=organization_id,
            host_name=host_name,
            host_location_id=host_location_id,
            host_organization_id=host_organization_id,
            host_ip=host_ip,
            host_ip6=host_ip6,
            host_mac=host_mac,
            host_domain_id=host_domain_id,
            host_operatingsystem_id=host_operatingsystem_id,
            host_subnet_id=host_subnet_id,
            host_model_id=host_model_id,
            host_hostgroup_id=host_hostgroup_id,
            host_host_parameters_attributes=host_host_parameters_attributes,
            host_build=host_build,
            host_enabled=host_enabled,
            host_managed=host_managed,
            host_comment=host_comment,
            host_interfaces_attributes=host_interfaces_attributes,
            host_content_facet_attributes_content_view_id=host_content_facet_attributes_content_view_id,
            host_content_facet_attributes_lifecycle_environment_id=host_content_facet_attributes_lifecycle_environment_id,
            host_content_facet_attributes_content_source_id=host_content_facet_attributes_content_source_id,
            host_content_facet_attributes_kickstart_repository_id=host_content_facet_attributes_kickstart_repository_id,
            host_subscription_facet_attributes_release_version=host_subscription_facet_attributes_release_version,
            host_subscription_facet_attributes_autoheal=host_subscription_facet_attributes_autoheal,
            host_subscription_facet_attributes_purpose_usage=host_subscription_facet_attributes_purpose_usage,
            host_subscription_facet_attributes_purpose_role=host_subscription_facet_attributes_purpose_role,
            host_subscription_facet_attributes_purpose_addons=host_subscription_facet_attributes_purpose_addons,
            host_subscription_facet_attributes_service_level=host_subscription_facet_attributes_service_level,
            host_subscription_facet_attributes_hypervisor_guest_uuids=host_subscription_facet_attributes_hypervisor_guest_uuids,
            host_subscription_facet_attributes_installed_products_attributes=host_subscription_facet_attributes_installed_products_attributes,
            setup_insights=setup_insights,
            setup_remote_execution=setup_remote_execution,
            remote_execution_interface=remote_execution_interface,
            setup_remote_execution_pull=setup_remote_execution_pull,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def post_register_without_preload_content(
        self,
        location_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="Set the current location context for the request"),
        ] = None,
        organization_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(description="Set the current organization context for the request"),
        ] = None,
        host_name: Optional[StrictStr] = None,
        host_location_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_organization_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_ip: Annotated[
            Optional[StrictStr],
            Field(
                description="IPv4 address, not required if using a subnet with DHCP proxy"
            ),
        ] = None,
        host_ip6: Annotated[
            Optional[StrictStr],
            Field(
                description="IPv6 address, not required if using a subnet with DHCP proxy"
            ),
        ] = None,
        host_mac: Annotated[
            Optional[StrictStr],
            Field(
                description="required for managed host that is bare metal, not required if it's a virtual machine"
            ),
        ] = None,
        host_domain_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="required if host is managed and value is not inherited from host group"
            ),
        ] = None,
        host_operatingsystem_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="required if host is managed and value is not inherited from host group"
            ),
        ] = None,
        host_subnet_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="required if host is managed and value is not inherited from host group"
            ),
        ] = None,
        host_model_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_hostgroup_id: Optional[Union[StrictFloat, StrictInt]] = None,
        host_host_parameters_attributes: Annotated[
            Optional[List[StrictStr]],
            Field(description="Host's parameters (array or indexed hash)"),
        ] = None,
        host_build: Optional[StrictBool] = None,
        host_enabled: Annotated[
            Optional[StrictBool],
            Field(description="Include this host within Foreman reporting"),
        ] = None,
        host_managed: Annotated[
            Optional[StrictBool],
            Field(
                description="True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not"
            ),
        ] = None,
        host_comment: Annotated[
            Optional[StrictStr],
            Field(description="Additional information about this host"),
        ] = None,
        host_interfaces_attributes: Annotated[
            Optional[List[StrictStr]], Field(description="Host's network interfaces")
        ] = None,
        host_content_facet_attributes_content_view_id: Optional[
            Union[StrictFloat, StrictInt]
        ] = None,
        host_content_facet_attributes_lifecycle_environment_id: Optional[
            Union[StrictFloat, StrictInt]
        ] = None,
        host_content_facet_attributes_content_source_id: Optional[
            Union[StrictFloat, StrictInt]
        ] = None,
        host_content_facet_attributes_kickstart_repository_id: Annotated[
            Optional[Union[StrictFloat, StrictInt]],
            Field(
                description="Repository Id associated with the kickstart repo used for provisioning"
            ),
        ] = None,
        host_subscription_facet_attributes_release_version: Annotated[
            Optional[StrictStr],
            Field(
                description="Release version for this Host to use (7Server, 7.1, etc)"
            ),
        ] = None,
        host_subscription_facet_attributes_autoheal: Annotated[
            Optional[StrictBool],
            Field(
                description="Sets whether the Host will autoheal subscriptions upon checkin"
            ),
        ] = None,
        host_subscription_facet_attributes_purpose_usage: Annotated[
            Optional[StrictStr], Field(description="Sets the system purpose usage")
        ] = None,
        host_subscription_facet_attributes_purpose_role: Annotated[
            Optional[StrictStr], Field(description="Sets the system purpose usage")
        ] = None,
        host_subscription_facet_attributes_purpose_addons: Annotated[
            Optional[List[StrictStr]], Field(description="Sets the system add-ons")
        ] = None,
        host_subscription_facet_attributes_service_level: Annotated[
            Optional[StrictStr],
            Field(description="Service level to be used for autoheal"),
        ] = None,
        host_subscription_facet_attributes_hypervisor_guest_uuids: Annotated[
            Optional[List[StrictStr]],
            Field(description="List of hypervisor guest uuids"),
        ] = None,
        host_subscription_facet_attributes_installed_products_attributes: Annotated[
            Optional[List[StrictStr]],
            Field(description="List of products installed on the host"),
        ] = None,
        setup_insights: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems"
            ),
        ] = None,
        setup_remote_execution: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host"
            ),
        ] = None,
        remote_execution_interface: Annotated[
            Optional[StrictStr],
            Field(description="Identifier of the Host interface for Remote execution"),
        ] = None,
        setup_remote_execution_pull: Annotated[
            Optional[StrictBool],
            Field(
                description="Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host"
            ),
        ] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Find or create a host and render the 'Host initial configuration' template


        :param location_id: Set the current location context for the request
        :type location_id: float
        :param organization_id: Set the current organization context for the request
        :type organization_id: float
        :param host_name:
        :type host_name: str
        :param host_location_id:
        :type host_location_id: float
        :param host_organization_id:
        :type host_organization_id: float
        :param host_ip: IPv4 address, not required if using a subnet with DHCP proxy
        :type host_ip: str
        :param host_ip6: IPv6 address, not required if using a subnet with DHCP proxy
        :type host_ip6: str
        :param host_mac: required for managed host that is bare metal, not required if it's a virtual machine
        :type host_mac: str
        :param host_domain_id: required if host is managed and value is not inherited from host group
        :type host_domain_id: float
        :param host_operatingsystem_id: required if host is managed and value is not inherited from host group
        :type host_operatingsystem_id: float
        :param host_subnet_id: required if host is managed and value is not inherited from host group
        :type host_subnet_id: float
        :param host_model_id:
        :type host_model_id: float
        :param host_hostgroup_id:
        :type host_hostgroup_id: float
        :param host_host_parameters_attributes: Host's parameters (array or indexed hash)
        :type host_host_parameters_attributes: List[str]
        :param host_build:
        :type host_build: bool
        :param host_enabled: Include this host within Foreman reporting
        :type host_enabled: bool
        :param host_managed: True/False flag whether a host is managed or unmanaged. Note: this value also determines whether several parameters are required or not
        :type host_managed: bool
        :param host_comment: Additional information about this host
        :type host_comment: str
        :param host_interfaces_attributes: Host's network interfaces
        :type host_interfaces_attributes: List[str]
        :param host_content_facet_attributes_content_view_id:
        :type host_content_facet_attributes_content_view_id: float
        :param host_content_facet_attributes_lifecycle_environment_id:
        :type host_content_facet_attributes_lifecycle_environment_id: float
        :param host_content_facet_attributes_content_source_id:
        :type host_content_facet_attributes_content_source_id: float
        :param host_content_facet_attributes_kickstart_repository_id: Repository Id associated with the kickstart repo used for provisioning
        :type host_content_facet_attributes_kickstart_repository_id: float
        :param host_subscription_facet_attributes_release_version: Release version for this Host to use (7Server, 7.1, etc)
        :type host_subscription_facet_attributes_release_version: str
        :param host_subscription_facet_attributes_autoheal: Sets whether the Host will autoheal subscriptions upon checkin
        :type host_subscription_facet_attributes_autoheal: bool
        :param host_subscription_facet_attributes_purpose_usage: Sets the system purpose usage
        :type host_subscription_facet_attributes_purpose_usage: str
        :param host_subscription_facet_attributes_purpose_role: Sets the system purpose usage
        :type host_subscription_facet_attributes_purpose_role: str
        :param host_subscription_facet_attributes_purpose_addons: Sets the system add-ons
        :type host_subscription_facet_attributes_purpose_addons: List[str]
        :param host_subscription_facet_attributes_service_level: Service level to be used for autoheal
        :type host_subscription_facet_attributes_service_level: str
        :param host_subscription_facet_attributes_hypervisor_guest_uuids: List of hypervisor guest uuids
        :type host_subscription_facet_attributes_hypervisor_guest_uuids: List[str]
        :param host_subscription_facet_attributes_installed_products_attributes: List of products installed on the host
        :type host_subscription_facet_attributes_installed_products_attributes: List[str]
        :param setup_insights: Set 'host_registration_insights' parameter for the host. If it is set to true, insights client will be installed and registered on Red Hat family operating systems
        :type setup_insights: bool
        :param setup_remote_execution: Set 'host_registration_remote_execution' parameter for the host. If it is set to true, SSH keys will be installed on the host
        :type setup_remote_execution: bool
        :param remote_execution_interface: Identifier of the Host interface for Remote execution
        :type remote_execution_interface: str
        :param setup_remote_execution_pull: Set 'host_registration_remote_execution_pull' parameter for the host. If it is set to true, pull provider client will be deployed on the host
        :type setup_remote_execution_pull: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._post_register_serialize(
            location_id=location_id,
            organization_id=organization_id,
            host_name=host_name,
            host_location_id=host_location_id,
            host_organization_id=host_organization_id,
            host_ip=host_ip,
            host_ip6=host_ip6,
            host_mac=host_mac,
            host_domain_id=host_domain_id,
            host_operatingsystem_id=host_operatingsystem_id,
            host_subnet_id=host_subnet_id,
            host_model_id=host_model_id,
            host_hostgroup_id=host_hostgroup_id,
            host_host_parameters_attributes=host_host_parameters_attributes,
            host_build=host_build,
            host_enabled=host_enabled,
            host_managed=host_managed,
            host_comment=host_comment,
            host_interfaces_attributes=host_interfaces_attributes,
            host_content_facet_attributes_content_view_id=host_content_facet_attributes_content_view_id,
            host_content_facet_attributes_lifecycle_environment_id=host_content_facet_attributes_lifecycle_environment_id,
            host_content_facet_attributes_content_source_id=host_content_facet_attributes_content_source_id,
            host_content_facet_attributes_kickstart_repository_id=host_content_facet_attributes_kickstart_repository_id,
            host_subscription_facet_attributes_release_version=host_subscription_facet_attributes_release_version,
            host_subscription_facet_attributes_autoheal=host_subscription_facet_attributes_autoheal,
            host_subscription_facet_attributes_purpose_usage=host_subscription_facet_attributes_purpose_usage,
            host_subscription_facet_attributes_purpose_role=host_subscription_facet_attributes_purpose_role,
            host_subscription_facet_attributes_purpose_addons=host_subscription_facet_attributes_purpose_addons,
            host_subscription_facet_attributes_service_level=host_subscription_facet_attributes_service_level,
            host_subscription_facet_attributes_hypervisor_guest_uuids=host_subscription_facet_attributes_hypervisor_guest_uuids,
            host_subscription_facet_attributes_installed_products_attributes=host_subscription_facet_attributes_installed_products_attributes,
            setup_insights=setup_insights,
            setup_remote_execution=setup_remote_execution,
            remote_execution_interface=remote_execution_interface,
            setup_remote_execution_pull=setup_remote_execution_pull,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": None,
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _post_register_serialize(
        self,
        location_id,
        organization_id,
        host_name,
        host_location_id,
        host_organization_id,
        host_ip,
        host_ip6,
        host_mac,
        host_domain_id,
        host_operatingsystem_id,
        host_subnet_id,
        host_model_id,
        host_hostgroup_id,
        host_host_parameters_attributes,
        host_build,
        host_enabled,
        host_managed,
        host_comment,
        host_interfaces_attributes,
        host_content_facet_attributes_content_view_id,
        host_content_facet_attributes_lifecycle_environment_id,
        host_content_facet_attributes_content_source_id,
        host_content_facet_attributes_kickstart_repository_id,
        host_subscription_facet_attributes_release_version,
        host_subscription_facet_attributes_autoheal,
        host_subscription_facet_attributes_purpose_usage,
        host_subscription_facet_attributes_purpose_role,
        host_subscription_facet_attributes_purpose_addons,
        host_subscription_facet_attributes_service_level,
        host_subscription_facet_attributes_hypervisor_guest_uuids,
        host_subscription_facet_attributes_installed_products_attributes,
        setup_insights,
        setup_remote_execution,
        remote_execution_interface,
        setup_remote_execution_pull,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> Tuple:
        _host = None

        _collection_formats: Dict[str, str] = {
            "host[host_parameters_attributes]": "csv",
            "host[interfaces_attributes]": "csv",
            "host[subscription_facet_attributes][purpose_addons]": "csv",
            "host[subscription_facet_attributes][hypervisor_guest_uuids]": "csv",
            "host[subscription_facet_attributes][installed_products_attributes]": "csv",
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, str] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        if location_id is not None:
            _form_params.append(("location_id", location_id))
        if organization_id is not None:
            _form_params.append(("organization_id", organization_id))
        if host_name is not None:
            _form_params.append(("host[name]", host_name))
        if host_location_id is not None:
            _form_params.append(("host[location_id]", host_location_id))
        if host_organization_id is not None:
            _form_params.append(("host[organization_id]", host_organization_id))
        if host_ip is not None:
            _form_params.append(("host[ip]", host_ip))
        if host_ip6 is not None:
            _form_params.append(("host[ip6]", host_ip6))
        if host_mac is not None:
            _form_params.append(("host[mac]", host_mac))
        if host_domain_id is not None:
            _form_params.append(("host[domain_id]", host_domain_id))
        if host_operatingsystem_id is not None:
            _form_params.append(("host[operatingsystem_id]", host_operatingsystem_id))
        if host_subnet_id is not None:
            _form_params.append(("host[subnet_id]", host_subnet_id))
        if host_model_id is not None:
            _form_params.append(("host[model_id]", host_model_id))
        if host_hostgroup_id is not None:
            _form_params.append(("host[hostgroup_id]", host_hostgroup_id))
        if host_host_parameters_attributes is not None:
            _form_params.append(
                ("host[host_parameters_attributes]", host_host_parameters_attributes)
            )
        if host_build is not None:
            _form_params.append(("host[build]", host_build))
        if host_enabled is not None:
            _form_params.append(("host[enabled]", host_enabled))
        if host_managed is not None:
            _form_params.append(("host[managed]", host_managed))
        if host_comment is not None:
            _form_params.append(("host[comment]", host_comment))
        if host_interfaces_attributes is not None:
            _form_params.append(
                ("host[interfaces_attributes]", host_interfaces_attributes)
            )
        if host_content_facet_attributes_content_view_id is not None:
            _form_params.append(
                (
                    "host[content_facet_attributes][content_view_id]",
                    host_content_facet_attributes_content_view_id,
                )
            )
        if host_content_facet_attributes_lifecycle_environment_id is not None:
            _form_params.append(
                (
                    "host[content_facet_attributes][lifecycle_environment_id]",
                    host_content_facet_attributes_lifecycle_environment_id,
                )
            )
        if host_content_facet_attributes_content_source_id is not None:
            _form_params.append(
                (
                    "host[content_facet_attributes][content_source_id]",
                    host_content_facet_attributes_content_source_id,
                )
            )
        if host_content_facet_attributes_kickstart_repository_id is not None:
            _form_params.append(
                (
                    "host[content_facet_attributes][kickstart_repository_id]",
                    host_content_facet_attributes_kickstart_repository_id,
                )
            )
        if host_subscription_facet_attributes_release_version is not None:
            _form_params.append(
                (
                    "host[subscription_facet_attributes][release_version]",
                    host_subscription_facet_attributes_release_version,
                )
            )
        if host_subscription_facet_attributes_autoheal is not None:
            _form_params.append(
                (
                    "host[subscription_facet_attributes][autoheal]",
                    host_subscription_facet_attributes_autoheal,
                )
            )
        if host_subscription_facet_attributes_purpose_usage is not None:
            _form_params.append(
                (
                    "host[subscription_facet_attributes][purpose_usage]",
                    host_subscription_facet_attributes_purpose_usage,
                )
            )
        if host_subscription_facet_attributes_purpose_role is not None:
            _form_params.append(
                (
                    "host[subscription_facet_attributes][purpose_role]",
                    host_subscription_facet_attributes_purpose_role,
                )
            )
        if host_subscription_facet_attributes_purpose_addons is not None:
            _form_params.append(
                (
                    "host[subscription_facet_attributes][purpose_addons]",
                    host_subscription_facet_attributes_purpose_addons,
                )
            )
        if host_subscription_facet_attributes_service_level is not None:
            _form_params.append(
                (
                    "host[subscription_facet_attributes][service_level]",
                    host_subscription_facet_attributes_service_level,
                )
            )
        if host_subscription_facet_attributes_hypervisor_guest_uuids is not None:
            _form_params.append(
                (
                    "host[subscription_facet_attributes][hypervisor_guest_uuids]",
                    host_subscription_facet_attributes_hypervisor_guest_uuids,
                )
            )
        if host_subscription_facet_attributes_installed_products_attributes is not None:
            _form_params.append(
                (
                    "host[subscription_facet_attributes][installed_products_attributes]",
                    host_subscription_facet_attributes_installed_products_attributes,
                )
            )
        if setup_insights is not None:
            _form_params.append(("setup_insights", setup_insights))
        if setup_remote_execution is not None:
            _form_params.append(("setup_remote_execution", setup_remote_execution))
        if remote_execution_interface is not None:
            _form_params.append(
                ("remote_execution_interface", remote_execution_interface)
            )
        if setup_remote_execution_pull is not None:
            _form_params.append(
                ("setup_remote_execution_pull", setup_remote_execution_pull)
            )
        # process the body parameter

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/x-www-form-urlencoded", "multipart/form-data"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = []

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/register",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )
