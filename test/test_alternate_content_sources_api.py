# coding: utf-8

"""
    Foreman (params in:formData)

     <p>Foreman API v2 is currently the default API version.</p> 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from foreman.api.alternate_content_sources_api import AlternateContentSourcesApi


class TestAlternateContentSourcesApi(unittest.TestCase):
    """AlternateContentSourcesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AlternateContentSourcesApi()

    def tearDown(self) -> None:
        pass

    def test_delete_alternate_content_sources_id(self) -> None:
        """Test case for delete_alternate_content_sources_id

        Destroy an alternate content source.
        """
        pass

    def test_get_alternate_content_sources(self) -> None:
        """Test case for get_alternate_content_sources

        List alternate content sources.
        """
        pass

    def test_get_alternate_content_sources_id(self) -> None:
        """Test case for get_alternate_content_sources_id

        Show an alternate content source.
        """
        pass

    def test_post_alternate_content_sources(self) -> None:
        """Test case for post_alternate_content_sources

        Create an alternate content source to download content from during repository syncing.  Note: alternate content sources are global and affect ALL sync actions on their smart proxies regardless of organization.
        """
        pass

    def test_post_alternate_content_sources_id_refresh(self) -> None:
        """Test case for post_alternate_content_sources_id_refresh

        Refresh an alternate content source. Refreshing, like repository syncing, is required before using an alternate content source.
        """
        pass

    def test_put_alternate_content_sources_id(self) -> None:
        """Test case for put_alternate_content_sources_id

        Update an alternate content source.
        """
        pass


if __name__ == "__main__":
    unittest.main()
