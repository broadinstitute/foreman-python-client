# coding: utf-8

"""
    Foreman (params in:formData)

     <p>Foreman API v2 is currently the default API version.</p> 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from foreman.api.foreman_tasks_api import ForemanTasksApi


class TestForemanTasksApi(unittest.TestCase):
    """ForemanTasksApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ForemanTasksApi()

    def tearDown(self) -> None:
        pass

    def test_get_tasks(self) -> None:
        """Test case for get_tasks

        List tasks
        """
        pass

    def test_get_tasks_id(self) -> None:
        """Test case for get_tasks_id

        Show task details
        """
        pass

    def test_get_tasks_id_details(self) -> None:
        """Test case for get_tasks_id_details

        Show task extended details
        """
        pass

    def test_get_tasks_parent_task_id_sub_tasks(self) -> None:
        """Test case for get_tasks_parent_task_id_sub_tasks

        Show sub_tasks details
        """
        pass

    def test_get_tasks_summary(self) -> None:
        """Test case for get_tasks_summary

        Show task summary
        """
        pass

    def test_post_tasks_bulk_cancel(self) -> None:
        """Test case for post_tasks_bulk_cancel

        Cancel selected cancellable tasks
        """
        pass

    def test_post_tasks_bulk_resume(self) -> None:
        """Test case for post_tasks_bulk_resume

        Resume all paused error tasks
        """
        pass

    def test_post_tasks_bulk_search(self) -> None:
        """Test case for post_tasks_bulk_search

        List dynflow tasks for uuids
        """
        pass

    def test_post_tasks_bulk_stop(self) -> None:
        """Test case for post_tasks_bulk_stop

        Stop selected stoppable tasks
        """
        pass

    def test_post_tasks_callback(self) -> None:
        """Test case for post_tasks_callback

        Send data to the task from external executor (such as smart_proxy_dynflow)
        """
        pass


if __name__ == "__main__":
    unittest.main()
