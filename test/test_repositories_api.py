# coding: utf-8

"""
    Foreman (params in:formData)

     <p>Foreman API v2 is currently the default API version.</p>   # noqa: E501

    OpenAPI spec version: v2

    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import pyforeman
from pyforeman.api.repositories_api import RepositoriesApi  # noqa: E501
from pyforeman.rest import ApiException


class TestRepositoriesApi(unittest.TestCase):
    """RepositoriesApi unit test stubs"""

    def setUp(self):
        self.api = pyforeman.api.repositories_api.RepositoriesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_delete_repositories_id(self):
        """Test case for delete_repositories_id

        Destroy a custom repository  # noqa: E501
        """
        pass

    def test_get_content_types(self):
        """Test case for get_content_types

        Return the enabled content types  # noqa: E501
        """
        pass

    def test_get_content_views_id_repositories(self):
        """Test case for get_content_views_id_repositories

        List of repositories for a content view  # noqa: E501
        """
        pass

    def test_get_environments_environment_id_products_product_id_repositories(self):
        """Test case for get_environments_environment_id_products_product_id_repositories

        List of repositories belonging to a product in an environment  # noqa: E501
        """
        pass

    def test_get_organizations_organization_id_environments_environment_id_repositories(
        self,
    ):
        """Test case for get_organizations_organization_id_environments_environment_id_repositories

        List repositories in the environment  # noqa: E501
        """
        pass

    def test_get_organizations_organization_id_repositories(self):
        """Test case for get_organizations_organization_id_repositories

        List of repositories in an organization  # noqa: E501
        """
        pass

    def test_get_products_product_id_repositories(self):
        """Test case for get_products_product_id_repositories

        List of repositories for a product  # noqa: E501
        """
        pass

    def test_get_repositories(self):
        """Test case for get_repositories

        List of enabled repositories  # noqa: E501
        """
        pass

    def test_get_repositories_compare(self):
        """Test case for get_repositories_compare

        List :resource  # noqa: E501
        """
        pass

    def test_get_repositories_id(self):
        """Test case for get_repositories_id

        Show a repository  # noqa: E501
        """
        pass

    def test_get_repositories_id_gpg_key_content(self):
        """Test case for get_repositories_id_gpg_key_content

        Return the content of a repo gpg key, used directly by yum  # noqa: E501
        """
        pass

    def test_get_repositories_repository_types(self):
        """Test case for get_repositories_repository_types

        Show the available repository types  # noqa: E501
        """
        pass

    def test_post_repositories(self):
        """Test case for post_repositories

        Create a custom repository  # noqa: E501
        """
        pass

    def test_post_repositories_id_reclaim_space(self):
        """Test case for post_repositories_id_reclaim_space

        Reclaim space from an On Demand repository  # noqa: E501
        """
        pass

    def test_post_repositories_id_sync(self):
        """Test case for post_repositories_id_sync

        Sync a repository  # noqa: E501
        """
        pass

    def test_post_repositories_id_upload_content(self):
        """Test case for post_repositories_id_upload_content

        Upload content into the repository  # noqa: E501
        """
        pass

    def test_post_repositories_id_verify_checksum(self):
        """Test case for post_repositories_id_verify_checksum

        Verify checksum of repository contents  # noqa: E501
        """
        pass

    def test_put_repositories_id(self):
        """Test case for put_repositories_id

        Update a repository  # noqa: E501
        """
        pass

    def test_put_repositories_id_import_uploads(self):
        """Test case for put_repositories_id_import_uploads

        Import uploads into a repository  # noqa: E501
        """
        pass

    def test_put_repositories_id_remove_content(self):
        """Test case for put_repositories_id_remove_content"""
        pass

    def test_put_repositories_id_remove_docker_manifests(self):
        """Test case for put_repositories_id_remove_docker_manifests"""
        pass

    def test_put_repositories_id_remove_packages(self):
        """Test case for put_repositories_id_remove_packages"""
        pass

    def test_put_repositories_id_republish(self):
        """Test case for put_repositories_id_republish

        Forces a republish of the specified repository, regenerating metadata and symlinks on the filesystem. Not allowed for repositories with the 'Complete Mirroring' mirroring policy.  # noqa: E501
        """
        pass


if __name__ == "__main__":
    unittest.main()
